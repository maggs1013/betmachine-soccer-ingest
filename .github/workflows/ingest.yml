name: Run ingest (soccer)

on:
  workflow_dispatch:
  # every hour for better odds coverage (UTC). Adjust as needed.
  schedule:
    - cron: "0 * * * *"
  # old example: every 6 hours
  # - cron: "15 */6 * * *"

jobs:
  ingest:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set env (common)
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
          APIFOOTBALL_KEY: ${{ secrets.APIFOOTBALL_KEY }}
          APIFOOTBALL_RAPIDAPI_KEY: ${{ secrets.APIFOOTBALL_RAPIDAPI_KEY }}
          FOOTBALLDATA_TOKEN: ${{ secrets.FOOTBALLDATA_TOKEN }}
        run: |
          # ---- Presence checks (no secrets printed) ----
          test -n "${ODDS_API_KEY}" && echo "ODDS_API_KEY: SET" || echo "ODDS_API_KEY: NOT SET"
          test -n "${APIFOOTBALL_KEY}" && echo "APIFOOTBALL_KEY: SET" || echo "APIFOOTBALL_KEY: NOT SET"
          test -n "${FOOTBALLDATA_TOKEN}" && echo "FOOTBALLDATA_TOKEN: SET" || echo "FOOTBALLDATA_TOKEN: NOT SET"

          # ---- Odds API (Stage 3) ----
          echo "ODDS_API_KEY=${ODDS_API_KEY}" >> $GITHUB_ENV
          echo "ODDS_REGIONS=us,uk,eu" >> $GITHUB_ENV
          echo "ODDS_FORMAT=decimal" >> $GITHUB_ENV
          echo "ODDS_SPORT_KEYS=soccer_epl,soccer_uefa_champs_league" >> $GITHUB_ENV

          # ---- FBref target page (Stage 1 helper) ----
          echo "FBREF_LEAGUE_URL=https://fbref.com/en/comps/9/stats/Premier-League-Stats" >> $GITHUB_ENV

          # ---- API-Football (Stage 6) ----
          echo "APIFOOTBALL_BASE=https://v3.football.api-sports.io" >> $GITHUB_ENV
          echo "APIFOOTBALL_KEY=${APIFOOTBALL_KEY}" >> $GITHUB_ENV
          # If you ever switch to RapidAPI, uncomment and switch base/keys:
          # echo "APIFOOTBALL_BASE=https://api-football-v1.p.rapidapi.com/v3" >> $GITHUB_ENV
          # echo "APIFOOTBALL_RAPIDAPI_KEY=${APIFOOTBALL_RAPIDAPI_KEY}" >> $GITHUB_ENV
          echo "APIFOOTBALL_LEAGUE_ID=39" >> $GITHUB_ENV
          echo "APIFOOTBALL_SEASON=2024" >> $GITHUB_ENV

          # ---- Football-Data.org (Stage 6) ----
          echo "FOOTBALLDATA_BASE=https://api.football-data.org/v4" >> $GITHUB_ENV
          echo "FOOTBALLDATA_TOKEN=${FOOTBALLDATA_TOKEN}" >> $GITHUB_ENV

          # ---- Stage 6/7 knobs ----
          echo "PAGINATION_LIMIT=3" >> $GITHUB_ENV
          # Join window (hours) for Stage 7; increase if you want more joins
          echo "STAGE7_JOIN_HOURS=8" >> $GITHUB_ENV

      # ---- Stage 3: The Odds API ----
      - name: Pull odds (The Odds API)
        if: env.ODDS_API_KEY != ''
        run: python src/odds_api_pull.py

      # ---- Stage 4: Football-Data.co.uk ----
      - name: Pull historical odds/results (Football-Data.co.uk)
        run: python src/football_data_pull.py

      # ---- Stage 1: StatsBomb Open ----
      - name: Pull events (StatsBomb Open)
        run: python src/statsbomb_open_pull.py

      - name: Pull xG/xA (Understat)
        run: python src/understat_pull.py

      # ---- Stage 2: OpenLigaDB + FBref helper ----
      - name: Pull fixtures/results (OpenLigaDB + FBref)
        # continue-on-error: true   # Uncomment if you want to ignore any rare FBref failures
        run: |
          python src/openligadb_pull.py
          # FBref script already handles 403 gracefully and exits 0
          python src/fbref_pull.py

      # ---- Stage 6: NEW connectors (use the *connect* scripts) ----
      - name: API-Football (fixtures/lineups/injuries)
        if: env.APIFOOTBALL_KEY != '' || env.APIFOOTBALL_RAPIDAPI_KEY != ''
        run: |
          python src/api_football_connect.py || true
          echo "--- AFTER API-FOOTBALL ---"
          find data/raw/api_football -maxdepth 2 -type f | sort || true

      - name: Football-Data.org (official)
        if: env.FOOTBALLDATA_TOKEN != ''
        run: |
          python src/football_data_org_connect.py || true
          echo "--- AFTER FOOTBALL-DATA.ORG ---"
          find data/raw/footballdata_org -maxdepth 2 -type f | sort || true

      # ---- Canonicalize + reports (same as before) ----
      - name: Normalize to canonical (demo)
        run: python src/normalize_soccer.py

      - name: Schema report
        run: python src/schema_report.py

      - name: Capabilities probe (today)
        run: python src/capabilities_probe.py

      # ---- Stage 7: Normalize sources & build master join ----
      - name: Stage 7 — Normalize API-Football & FD.org
        run: |
          python src/stage7_normalize_api_football.py
          python src/stage7_normalize_fdorg.py

      - name: Stage 7 — Build master join
        run: python src/stage7_build_master_join.py

      # ---- Quick listing so logs show what's new ----
      - name: List new files (normalized + joined)
        run: |
          echo "---- data/normalized ----"
          find data/normalized -maxdepth 2 -type f | sort || true
          echo "---- data/joined ----"
          find data/joined -maxdepth 2 -type f | sort || true
          echo "---- data/raw (top 3 levels) ----"
          find data/raw -maxdepth 3 -type f | sort || true

      # ---- Upload artifacts ----
      - name: Upload data snapshots
        uses: actions/upload-artifact@v4
        with:
          name: soccer-raw-${{ github.run_id }}-${{ github.run_attempt }}
          path: data/raw
          if-no-files-found: warn

      - name: Upload Stage 7 outputs
        uses: actions/upload-artifact@v4
        with:
          name: stage7-joined-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            data/normalized
            data/joined
          if-no-files-found: warn